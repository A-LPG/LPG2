# ########################################################################### #
#                             LPG PROJECT                                     #
# Module/File       : %Y%/%M%                                                 #
# Version           : %I%                                                     #
# Date              : %G%                                                     #
#                                                                             #
# Description       : Makefile rules for LPG project                          #
#                                                                             #
# ########################################################################### #

# *************************************************************************** #
# FILE DOCUMENTATION:                                                         #
#                                                                             #
# *************************************************************************** #

# ecct=======================Fri Apr 25 20:31:23 1997======================== #
# CHANGE HISTORY:                                                             #
# ecct=======================Fri Apr 25 20:31:23 1997======================== #

LPG = ..

# ######################################################################### #
# Combine all the flags into the groups used by the rules                   #
# ######################################################################### #
LPGINCDIR  = $(LPG)/include
LPGLIBDIR  = $(LPG)/lib
LPGBINDIR  = $(LPG)/bin

INSTINCDIR = $(INSTALLDIR)/include
INSTLIBDIR = $(INSTALLDIR)/lib
INSTBINDIR = $(INSTALLDIR)/bin

SRCS       = $(YSRCS) $(LSRCS) $(CSRCS)
ALLSRCS    = $(SRCS) $(CXXSRCS)
HDRS       = $(LHDRS) $(XHDRS)
OBJS       = $(YOBJS) $(LOBJS) $(COBJS)

INSTALLABLES = $(TARGET) $(XHDRS)

INCDIRS    = $(LOCALINCDIRS) -I$(LPGINCDIR) $(SYSINCDIRS)
ARCHIVES   = $(LOCALARCHIVES) $(LPGARCHIVES)

CFLAGS     = $(XCFLAGS)   $(LOCAL_CFLAGS) $(INCDIRS)
CXXFLAGS   = $(XCXXFLAGS) $(LOCAL_CXXFLAGS) $(INCDIRS)
LDFLAGS    = $(XLDFLAGS)  $(LOCAL_LDFLAGS) $(ARCHIVES) $(SYSLIBDIRS) $(SYSARCHIVES)
LFLAGS     = $(XLFLAGS)   $(LOCAL_LFLAGS)
YFLAGS     = $(XYFLAGS)   $(LOCAL_YFLAGS)

# ######################################################################### #
# Now the rules themselves                                                  #
# ######################################################################### #

# ######################################################################### #
# FIRST THE LOCAL RULES                                                     #
# ######################################################################### #
install:: Makefile install_subdirs all $(INSTALLABLES)
	@(targets_var="$(INSTALLABLES)"; \
	if [ -n "$$targets_var" ]; then \
		echo "Installing targets and headers:"; \
		for i in $$targets_var ; do \
			case $$i in \
			*.a|*.exp) \
				if [ ! -d $(INSTLIBDIR) ]; then \
					echo "Creating Libraries install directory" $(INSTLIBDIR); \
					$(MKDIR) $(INSTLIBDIR); \
				fi; \
				if [ -f $(INSTLIBDIR)/$$i ] ; then \
					if $(CMP) $$i $(INSTLIBDIR)/$$i; then \
						dummy=0; \
					else \
						echo $(CP)  $$i $(INSTLIBDIR)/$$i ; \
						$(RM) $(INSTLIBDIR)/$$i; \
						$(CP) $$i $(INSTLIBDIR)/$$i; \
						$(RANLIB) $(INSTLIBDIR)/$$i; \
					fi; \
				else \
					echo $(CP)  $$i $(INSTLIBDIR)/$$i ; \
					$(CP) $$i $(INSTLIBDIR)/$$i; \
				fi;; \
			*.[hH]) \
				if [ ! -d $(INSTINCDIR) ]; then \
					echo "Creating Includes install directory" $(INSTINCDIR); \
					$(MKDIR) $(INSTINCDIR); \
				fi; \
				if [ -f $(INSTINCDIR)/$$i ] ; then \
					if $(CMP) $$i $(INSTINCDIR)/$$i ; then \
						dummy=0; \
					else \
						echo $(CP) $$i $(INSTINCDIR)/$$i ; \
						$(RM) $(INSTINCDIR)/$$i; \
						$(CP) $$i $(INSTINCDIR)/$$i ; \
					fi; \
				else \
					echo $(CP) $$i $(INSTINCDIR)/$$i ; \
					$(CP) $$i $(INSTINCDIR)/$$i ; \
				fi;; \
			*) \
				if [ ! -d $(INSTBINDIR) ]; then \
					echo "Creating Executables install directory" $(INSTBINDIR); \
					$(MKDIR) $(INSTBINDIR); \
				fi; \
				if [ -f $(INSTBINDIR)/$$i ] ; then \
					$(RM) $(INSTBINDIR)/$$i; fi ; \
				echo $(CP) $$i $(INSTBINDIR)/$$i ; \
				$(CP) $$i $(INSTBINDIR)/$$i ;; \
			esac; \
		done; \
	fi)

all:: Makefile $(OTHER) $(ALLSRCS) $(HDRS) $(TARGET)

$(TARGET) dummy_target :: Makefile $(HDRS) $(OTHER) $(OBJS) $(ARCHIVES)
	@ case $@ in \
	dummy_target) \
		;; \
	*.a) \
		echo $(AR) ruv $@ $(OBJS); \
		$(AR) ruv $@ $(OBJS); \
		$(RANLIB) $@ ;; \
	*) \
		echo $(LD) $(OBJS) -o $@ $(LDFLAGS); \
		$(LD) $(OBJS) -o $@ $(LDFLAGS) ;; \
	esac

# tags generation
tags:: $(ALLSRCS) $(HDRS)
	$(TAGS) $(ALLSRCS) $(HDRS)

# pooper-scooper rules
tidy:: tidy_subdirs
	$(RM) core ,* *~ *.bak

clean:: clean_subdirs
	$(RM) core ,* *~ *.bak
	$(RM) *.o gmon.out mon.out TAGS tags

purge:: purge_subdirs
	$(RM) core ,* *~ *.bak
	$(RM) *.o gmon.out mon.out TAGS tags
	$(RM) *.txref *.brs *.pdb *.hd
	$(RM) $(TARGET)

# depend related rules
depend:: depend_subdirs $(HDRS) $(ALLSRCS)
	$(MAKEDEPEND)    -f Makefile -- $(CFLAGS) -- $(SRCS)
	$(MAKEDEPEND) -a -f Makefile -- $(CXXFLAGS) -I$(CXXBASEINC) -I/ -- $(CXXSRCS)
	mindepend -safe Makefile > Makefile.new
	if [ -w Makefile ]; then \
		$(MV) Makefile.new Makefile; \
	else \
		$(MV) Makefile.new Makefile; \
		chmod -w Makefile; \
	fi

stripdepend:: stripdepend_subdirs
	$(MAKEDEPEND) -f Makefile


# ######################################################################### #
# NOW THE SUBDIR RULES                                                      #
# ######################################################################### #
all_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) all in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" "XCFLAGS=$(XCFLAGS)" "XCXXFLAGS=$(XCXXFLAGS)" "XLDFLAGS=$(XLDFLAGS)" \
					"XLFLAGS=$(XLFLAGS)" "XYFLAGS=$(XYFLAGS)") ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done \
	fi)

install_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) install in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" "XCFLAGS=$(XCFLAGS)" "XCXXFLAGS=$(XCXXFLAGS)" "XLDFLAGS=$(XLDFLAGS)" \
					 "XLFLAGS=$(XLFLAGS)" "XYFLAGS=$(XYFLAGS)" install) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done \
	fi)

Makefiles::
	@(subdirs_var="$(SUBDIRS)"; \
	  if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			  THIS_DIR=`pwd`; \
			  THIS_DIR=`echo $$THIS_DIR | sed -e 's,$(CMVC_TOP)/,,'`; \
			  echo Extracting Makefile from CMVC in `pwd`; \
			  File -extract $$THIS_DIR/Makefile; \
			  echo $(MAKE) Makefiles in `pwd`; \
			  if ($(MAKE) "MAKE=$(MAKE)" Makefiles) ; then \
				echo -n ; \
			  else \
				exit 1; \
			  fi ); \
		done; \
	fi)

tags_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) tags in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" "TAGS=$(TAGS)" tags) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done; \
	fi)

tidy_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) tidy in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" tidy) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done; \
	fi)

clean_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) clean in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" clean) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done; \
	fi)

purge_subdirs:: 
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) purge in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" purge) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done; \
	fi)

depend_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) depend in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" "XCFLAGS=$(XCFLAGS)" "XCXXFLAGS=$(XCXXFLAGS)" depend) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done; \
	fi)

stripdepend_subdirs::
	@(subdirs_var="$(SUBDIRS)"; \
	if [ -n "$$subdirs_var" ]; then \
		for i in $$subdirs_var; do \
			( cd $$i; \
			echo $(MAKE) stripdepend in `pwd`; \
			if ($(MAKE) "MAKE=$(MAKE)" "XCFLAGS=$(XCFLAGS)" "XCXXFLAGS=$(XCXXFLAGS)" stripdepend) ; then \
				echo -n ; \
			else \
				exit 1; \
			fi ); \
		done; \
	fi)

# ######################################################################### #
# Code the suffix rules explicitly (can't always be sure they exist)        #
# ######################################################################### #
.PRECIOUS: $(TARGET)
